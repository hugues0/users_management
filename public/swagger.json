{
	"components": {
		"examples": {},
		"headers": {},
		"parameters": {},
		"requestBodies": {},
		"responses": {},
		"schemas": {
			"User": {
				"properties": {
					"id": {
						"type": "string"
					},
					"firstName": {
						"type": "string"
					},
					"lastName": {
						"type": "string"
					},
					"email": {
						"type": "string"
					},
					"password": {
						"type": "string"
					},
					"position": {
						"type": "string"
					}
				},
				"required": [
					"id",
					"firstName",
					"lastName",
					"email",
					"password",
					"position"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Pick_User.Exclude_keyofUser.id__": {
				"properties": {
					"firstName": {
						"type": "string"
					},
					"lastName": {
						"type": "string"
					},
					"email": {
						"type": "string"
					},
					"password": {
						"type": "string"
					},
					"position": {
						"type": "string"
					}
				},
				"required": [
					"firstName",
					"lastName",
					"email",
					"password",
					"position"
				],
				"type": "object",
				"description": "From T, pick a set of properties whose keys are in the union K"
			},
			"Omit_User.id_": {
				"$ref": "#/components/schemas/Pick_User.Exclude_keyofUser.id__",
				"description": "Construct a type with the properties of T except for those in type K."
			},
			"CreateUser": {
				"$ref": "#/components/schemas/Omit_User.id_"
			},
			"SignInResponse": {
				"properties": {
					"user": {
						"properties": {
							"position": {
								"type": "string"
							},
							"email": {
								"type": "string"
							},
							"lastName": {
								"type": "string"
							},
							"firstName": {
								"type": "string"
							},
							"id": {
								"type": "string"
							}
						},
						"required": [
							"position",
							"email",
							"lastName",
							"firstName",
							"id"
						],
						"type": "object"
					},
					"accessToken": {
						"type": "string"
					},
					"success": {
						"type": "boolean"
					}
				},
				"required": [
					"user",
					"accessToken",
					"success"
				],
				"type": "object"
			},
			"LoginUser": {
				"properties": {
					"password": {
						"type": "string"
					},
					"email": {
						"type": "string"
					}
				},
				"required": [
					"password",
					"email"
				],
				"type": "object"
			}
		},
		"securitySchemes": {
			"jwtAuth": {
				"type": "http",
				"scheme": "bearer",
				"bearerFormat": "JWT",
				"description": "Bearer token to access these API endpoints"
			}
		}
	},
	"info": {
		"title": "users-management",
		"version": "1.0.0",
		"description": "Users and tasks management backend",
		"license": {
			"name": "ISC"
		},
		"contact": {}
	},
	"openapi": "3.0.0",
	"paths": {
		"/api/auth/signup": {
			"post": {
				"operationId": "CreateUser",
				"responses": {
					"201": {
						"description": "Successfully created.",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/User"
								}
							}
						}
					}
				},
				"security": [],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/CreateUser"
							}
						}
					}
				}
			}
		},
		"/api/auth/signin": {
			"post": {
				"operationId": "LoginUser",
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/SignInResponse"
								}
							}
						}
					}
				},
				"security": [],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/LoginUser"
							}
						}
					}
				}
			}
		}
	},
	"servers": [
		{
			"url": "/"
		}
	]
}